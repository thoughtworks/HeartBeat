---
export interface Props {
	isCorrect?: boolean;
}

const { isCorrect } = Astro.props as Props;
---

<li>
	<label>
		<input type="radio" disabled data-is-correct={isCorrect} /><span><slot /></span>
		{
			Astro.slots.has('feedback') && (
				<template>
					<slot name="feedback" />
				</template>
			)
		}
	</label>
</li>

<style>
	label {
		display: grid;
		grid-template-columns: auto 1fr;
		gap: 1rem;
		align-items: center;
		border-radius: 1rem;
		margin-inline: -0.5rem;
		padding: 0.5rem;
		cursor: pointer;
	}

	label:hover {
		background-color: var(--theme-bg-hover);
	}

	input[type='radio'] {
		-webkit-appearance: none;
		appearance: none;
		cursor: pointer;
	}

	input[type='radio'] ~ * {
		color: var(--theme-text-light);
	}

	input[type='radio']:checked ~ * {
		color: var(--theme-text);
	}

	input[type='radio']:focus::after {
		outline: 3px solid var(--theme-text);
		outline-offset: 0.5rem;
	}

	input[type='radio']:focus,
	input[type='radio']:not(:focus-visible)::after {
		outline: none;
	}

	input[type='radio']::after {
		display: block;
		content: counter(list-item, upper-alpha);
		text-align: center;
		line-height: 2;
		width: 2em;
		height: 2em;
		font-size: 1.25em;
		font-weight: 900;
		border: 1px solid var(--theme-shade-subtle);
		border-radius: 0.5rem;
		color: var(--theme-text-lighter);
		box-shadow: -3px 3px var(--theme-shade-subtle);
		transform: translate(1.5px, -1.5px);
	}

	@media (prefers-reduced-motion: no-preference) {
		input[type='radio']::after {
			transition-property: transform, box-shadow;
			transition-timing-function: var(--theme-ease-bounce);
			transition-duration: 0.15s;
		}
	}

	input[type='radio']:checked::after {
		color: hsl(var(--color-base-white), 100%);
		background-color: var(--theme-accent-secondary);
		box-shadow: -1px 1px var(--theme-shade-subtle);
		transform: translate(-0.5px, 0.5px);
	}
</style>
