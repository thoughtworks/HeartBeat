---
import type { CollectionEntry } from 'astro:content';
import LayoutSwitcher from '~/layouts/LayoutSwitcher.astro';
import { allPages } from '~/content';
import { stripLangFromSlug } from '~/util';
import languages from '../../i18n/languages';
import { groupPagesByLang } from '../../util/groupPagesByLang';

// This route uses `...fallback` as its param name so that layouts & components
// downstream can check `Astro.params.fallback` to see if they are being rendered
// on a fallback page or on a regular page.

export async function getStaticPaths() {
	// Handle fallbacks to english for langs without translations
	const fallbacks = [];
	const pagesByLang = groupPagesByLang(allPages);
	for (const lang of Object.keys(languages)) {
		if (lang === 'en') continue;

		for (const englishPage of pagesByLang.en) {
			const slugWithoutLang = stripLangFromSlug(englishPage.slug);
			const doesNotNeedFallback = pagesByLang[lang]?.some((p) => p.slug.endsWith(slugWithoutLang));
			if (doesNotNeedFallback) continue;
			fallbacks.push({ params: { lang, fallback: slugWithoutLang }, props: englishPage });
		}
	}
	return fallbacks;
}

export type Props = CollectionEntry<'docs'>;
const { data, render } = Astro.props;
const { Content, headings } = await render();
---

<LayoutSwitcher {...{ data, headings }}><Content /></LayoutSwitcher>
